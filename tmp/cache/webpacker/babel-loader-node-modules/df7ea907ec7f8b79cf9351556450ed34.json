{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SIGN_IN, SIGN_OUT } from '../actions/types';\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSignedIn: true,\n        userId: action.payload\n      });\n\n    case SIGN_OUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSignedIn: false,\n        userId: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/base/Desktop/medi-chart20/src/reducers/authReducer.js"],"names":["SIGN_IN","SIGN_OUT","INITIAL_STATE","isSignedIn","userId","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,OAAR,EAAiBC,QAAjB,QAAgC,kBAAhC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,MAAM,EAAC;AAFa,CAAtB;AAKA,gBAAe,CAAEC,KAAK,GAAGH,aAAV,EAA0BI,MAA1B,KAAqC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,OAAL;AACE,6CAAUK,KAAV;AAAiBF,QAAAA,UAAU,EAAG,IAA9B;AAAoCC,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAAnD;;AACF,SAAKP,QAAL;AACE,6CAAUI,KAAV;AAAiBF,QAAAA,UAAU,EAAG,KAA9B;AAAqCC,QAAAA,MAAM,EAAE;AAA7C;;AACF;AACA,aAAOC,KAAP;AANF;AAQD,CATD","sourcesContent":["import {SIGN_IN, SIGN_OUT} from '../actions/types'\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId:null\n}\n\nexport default ( state = INITIAL_STATE , action) => {\n  switch(action.type) {\n    case SIGN_IN:\n      return{...state, isSignedIn : true, userId: action.payload }\n    case SIGN_OUT:\n      return{...state, isSignedIn : false, userId: null }\n    default:\n    return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}