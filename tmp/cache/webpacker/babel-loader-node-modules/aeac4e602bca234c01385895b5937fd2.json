{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CREATE_REPORT, FETCH_REPORT, FETCH_REPORTS, EDIT_REPORT, DELETE_REPORT } from '../actions/types';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_REPORTS:\n      const reports = {};\n      action.payload.forEach(report => {\n        reports[report.id] = report;\n      });\n      return _objectSpread(_objectSpread({}, state), reports);\n\n    case FETCH_REPORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.payload.id]: action.payload\n      });\n\n    case CREATE_REPORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.payload.id]: action.payload\n      });\n\n    case EDIT_REPORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.payload.id]: action.payload\n      });\n\n    case DELETE_REPORT:\n      const newState = _objectSpread({}, state);\n\n      return delete newState[action.payload];\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/base/Desktop/medi-chart20/src/reducers/reportReducer.js"],"names":["CREATE_REPORT","FETCH_REPORT","FETCH_REPORTS","EDIT_REPORT","DELETE_REPORT","state","action","type","reports","payload","forEach","report","id","newState"],"mappings":";;;;;;AAAA,SACEA,aADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,aALF,QAMO,kBANP;AASA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAKL,aAAL;AACE,YAAMM,OAAO,GAAG,EAAhB;AACCF,MAAAA,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAuBC,MAAM,IAAI;AAC/BH,QAAAA,OAAO,CAACG,MAAM,CAACC,EAAR,CAAP,GAAqBD,MAArB;AACD,OAFD;AAGD,6CAAWN,KAAX,GAAqBG,OAArB;;AAEF,SAAKP,YAAL;AACE,6CAAUI,KAAV;AAAiB,SAACC,MAAM,CAACG,OAAP,CAAeG,EAAhB,GAAqBN,MAAM,CAACG;AAA7C;;AAEF,SAAKT,aAAL;AACE,6CAAUK,KAAV;AAAiB,SAACC,MAAM,CAACG,OAAP,CAAeG,EAAhB,GAAqBN,MAAM,CAACG;AAA7C;;AAEF,SAAKN,WAAL;AACE,6CAAUE,KAAV;AAAiB,SAACC,MAAM,CAACG,OAAP,CAAeG,EAAhB,GAAqBN,MAAM,CAACG;AAA7C;;AAEF,SAAKL,aAAL;AACE,YAAMS,QAAQ,qBAAOR,KAAP,CAAd;;AACE,aAAO,OAAOQ,QAAQ,CAACP,MAAM,CAACG,OAAR,CAAtB;;AACF;AACE,aAAOJ,KAAP;AAtBN;AAwBD,CAzBD","sourcesContent":["import {\n  CREATE_REPORT,\n  FETCH_REPORT,\n  FETCH_REPORTS,\n  EDIT_REPORT,\n  DELETE_REPORT\n} from '../actions/types'\n\n\nexport default (state = {}, action) => {\n  switch(action.type) {\n\n    case FETCH_REPORTS:\n      const reports = {}\n       action.payload.forEach(report => {\n         reports[report.id] = report\n       })\n      return {...state, ...reports }\n\n    case FETCH_REPORT:\n      return{...state, [action.payload.id]: action.payload}\n\n    case CREATE_REPORT:\n      return{...state, [action.payload.id]: action.payload}\n\n    case EDIT_REPORT:\n      return{...state, [action.payload.id]: action.payload}\n\n    case DELETE_REPORT:\n      const newState = {...state}\n        return delete newState[action.payload]\n      default:\n        return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}