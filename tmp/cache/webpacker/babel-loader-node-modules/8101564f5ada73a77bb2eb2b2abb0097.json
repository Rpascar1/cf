{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport Google_Auth_Key from './GoogleAuthKey';\nimport styles from './mystyle.module.scss';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onAuthChange\", isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getBasicProfile().getEmail());\n      } else {\n        this.props.signOut();\n      }\n    });\n\n    _defineProperty(this, \"onSignInClick\", () => {\n      this.auth.signIn();\n    });\n\n    _defineProperty(this, \"onSignOutClick\", () => {\n      this.auth.signOut();\n    });\n\n    _defineProperty(this, \"renderAuthButton\", () => {\n      if (this.props.isSignedIn === null) {\n        return /*#__PURE__*/React.createElement(\"div\", null, \"Signing in\");\n      } else if (this.props.isSignedIn === true) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          onClick: this.onSignOutClick\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.googleBtn\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.googleiconwrapper\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: styles.googleicon,\n          src: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\",\n          alt: \"this is broken\"\n        })), /*#__PURE__*/React.createElement(\"a\", {\n          className: styles.btntextSO,\n          alt: \"this is broken\"\n        }, /*#__PURE__*/React.createElement(\"b\", null, \"Sign Out\"))));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          onClick: this.onSignInClick\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.googleBtn\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.googleiconwrapper\n        }, /*#__PURE__*/React.createElement(\"i\", null, /*#__PURE__*/React.createElement(\"img\", {\n          className: styles.googleicon,\n          src: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\",\n          alt: \"this is broken\"\n        }))), /*#__PURE__*/React.createElement(\"a\", {\n          className: styles.btntextSI,\n          alt: \"this is broken\"\n        }, /*#__PURE__*/React.createElement(\"b\", null, \"Sign in\"))));\n      }\n    });\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: Google_Auth_Key,\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", null, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/base/Desktop/medi-chart20/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","Google_Auth_Key","styles","GoogleAuth","Component","isSignedIn","props","auth","currentUser","get","getBasicProfile","getEmail","onSignOutClick","googleBtn","googleiconwrapper","googleicon","btntextSO","onSignInClick","btntextSI","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","onAuthChange","listen","render","renderAuthButton","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {signIn, signOut} from '../actions'\nimport  Google_Auth_Key  from './GoogleAuthKey'\nimport styles from './mystyle.module.scss'\n\n\n\nclass GoogleAuth extends React.Component{\n\n\n  componentDidMount(){\n      window.gapi.load('client:auth2', ()=>{\n        window.gapi.client.init({\n          clientId: Google_Auth_Key,\n          scope: 'email'\n        }).then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance()\n          this.onAuthChange(this.auth.isSignedIn.get())\n          this.auth.isSignedIn.listen(this.onAuthChange)\n        })\n      })\n  }\n\n  onAuthChange = isSignedIn => {\n      if (isSignedIn){\n        this.props.signIn( this.auth.currentUser.get().getBasicProfile().getEmail())\n      } else {\n        this.props.signOut()\n      }\n  }\n  //to get email\n  // this.auth.currentUser.get().getBasicProfile().getEmail()\n  onSignInClick = () => {\n\n      this.auth.signIn()\n  }\n\n  onSignOutClick = () => {\n      this.auth.signOut()\n  }\n\n\n  renderAuthButton = () => {\n    if (this.props.isSignedIn === null) {\n      return <div>Signing in</div>\n    } else if (this.props.isSignedIn === true) {\n      return (\n\n      <div  onClick={this.onSignOutClick} >\n        <div className={styles.googleBtn}>\n          <div className={styles.googleiconwrapper}>\n\n            <img className={styles.googleicon} src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"this is broken\"/>\n\n            </div>\n            <a className={styles.btntextSO} alt=\"this is broken\"><b>Sign Out</b></a>\n            </div>\n        </div>\n\n\n\n      )\n    } else {\n      return (\n        <div  onClick={this.onSignInClick} >\n        <div className={styles.googleBtn}>\n          <div className={styles.googleiconwrapper}>\n            <i>\n            <img className={styles.googleicon} src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"this is broken\"/>\n            </i>\n          </div>\n            <a className={styles.btntextSI} alt=\"this is broken\"><b>Sign in</b></a>\n            </div>\n\n        </div>\n\n\n      )\n    }\n  }\n\n  render(){\n    return <div>{this.renderAuthButton()}</div>\n  }\n}\n\nconst mapStateToProps = (state)=> {\n  return {isSignedIn: state.auth.isSignedIn}\n}\n\nexport default connect(mapStateToProps,{signIn,signOut})(GoogleAuth)\n"]},"metadata":{},"sourceType":"module"}